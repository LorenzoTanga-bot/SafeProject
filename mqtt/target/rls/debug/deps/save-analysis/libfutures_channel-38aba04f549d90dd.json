{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15","program":"/Users/lorenzotanganelli/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"std\"","-C","metadata=38aba04f549d90dd","-C","extra-filename=-38aba04f549d90dd","--out-dir","/Users/lorenzotanganelli/Documents/Development/SafeProject/mqtt/target/rls/debug/deps","-L","dependency=/Users/lorenzotanganelli/Documents/Development/SafeProject/mqtt/target/rls/debug/deps","--extern","futures_core=/Users/lorenzotanganelli/Documents/Development/SafeProject/mqtt/target/rls/debug/deps/libfutures_core-7c2a35057b329077.rmeta","--extern","futures_sink=/Users/lorenzotanganelli/Documents/Development/SafeProject/mqtt/target/rls/debug/deps/libfutures_sink-f6f858e600e0069b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/lorenzotanganelli/.rustup/toolchains/nightly-aarch64-apple-darwin"],"output":"/Users/lorenzotanganelli/Documents/Development/SafeProject/mqtt/target/rls/debug/deps/libfutures_channel-38aba04f549d90dd.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[12123212297773513551,12768413028586648123]},"crate_root":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src","external_crates":[{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12443907147323238810,2718382764530249389]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[18435971622045565648,6718030516672925577]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10468227524211150698,7880633461198486775]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5649245113729493254,2925111068688963856]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5730319193988375057,18187886226244162728]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8131927260688331328,5898153744772881516]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2927844492749326525,15212993672507725575]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6263830708048219076,2623460228796122179]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2990185236641906671,16170885262385476258]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9855138539645931531,14949182055321230953]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1715074786086418113,2982147461989543672]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[5845397543047719910,12094654832383693305]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10713605863938315962,8173110084171795665]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5441742098850442605,374104128501249162]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17816418854642644224,17832026894142009220]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[6490126801127634966,6345106379900642955]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","num":17,"id":{"name":"futures_core","disambiguator":[717655595596829406,1620264624085228361]}},{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/sink_impl.rs","num":18,"id":{"name":"futures_sink","disambiguator":[1376482238168521602,13674256363714575777]}}],"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":0,"byte_end":1332,"line_start":1,"line_end":38,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":0,"byte_end":1332,"line_start":1,"line_end":38,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":44},{"krate":0,"index":359}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":605,"byte_end":693,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":861,"byte_end":882,"line_start":18,"line_end":18,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":133},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":493},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":496},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":187},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":568},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":237},{"krate":0,"index":252},{"krate":0,"index":269},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1049,"byte_end":1083,"line_start":23,"line_end":23,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1238,"byte_end":1261,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7640807,"byte_end":7640876,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7640877,"byte_end":7640900,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7640901,"byte_end":7640904,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7640905,"byte_end":7640975,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7640976,"byte_end":7641055,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641056,"byte_end":7641131,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641132,"byte_end":7641204,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641205,"byte_end":7641287,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641288,"byte_end":7641365,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641366,"byte_end":7641443,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641444,"byte_end":7641489,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641490,"byte_end":7641493,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641494,"byte_end":7641570,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641571,"byte_end":7641574,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641575,"byte_end":7641594,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641595,"byte_end":7641598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641599,"byte_end":7641665,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641666,"byte_end":7641746,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641747,"byte_end":7641804,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641805,"byte_end":7641839,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641840,"byte_end":7641843,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641844,"byte_end":7641914,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641915,"byte_end":7641994,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7641995,"byte_end":7642018,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642019,"byte_end":7642022,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642023,"byte_end":7642043,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642044,"byte_end":7642047,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642048,"byte_end":7642114,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642115,"byte_end":7642191,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642192,"byte_end":7642272,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642273,"byte_end":7642353,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642354,"byte_end":7642426,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642427,"byte_end":7642486,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642487,"byte_end":7642490,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642491,"byte_end":7642525,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642526,"byte_end":7642564,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642565,"byte_end":7642624,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642625,"byte_end":7642653,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7642654,"byte_end":7642724,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646115,"byte_end":7646121,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7645967,"byte_end":7646018,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646019,"byte_end":7646022,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646023,"byte_end":7646086,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646313,"byte_end":7646328,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646158,"byte_end":7646212,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646213,"byte_end":7646216,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646217,"byte_end":7646284,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646600,"byte_end":7646608,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":512}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646455,"byte_end":7646503,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646504,"byte_end":7646507,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646508,"byte_end":7646571,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646810,"byte_end":7646827,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646658,"byte_end":7646709,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646710,"byte_end":7646713,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646714,"byte_end":7646781,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647104,"byte_end":7647113,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":523}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646994,"byte_end":7647053,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647252,"byte_end":7647264,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647144,"byte_end":7647208,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647474,"byte_end":7647486,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":190}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647396,"byte_end":7647462,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647936,"byte_end":7647943,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647853,"byte_end":7647924,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648160,"byte_end":7648175,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648073,"byte_end":7648148,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648974,"byte_end":7648981,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648891,"byte_end":7648962,"line_start":229,"line_end":229,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649124,"byte_end":7649139,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649037,"byte_end":7649112,"line_start":234,"line_end":234,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649280,"byte_end":7649290,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649203,"byte_end":7649268,"line_start":239,"line_end":239,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649398,"byte_end":7649413,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649332,"byte_end":7649386,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652772,"byte_end":7652779,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652146,"byte_end":7652226,"line_start":347,"line_end":347,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652227,"byte_end":7652230,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652231,"byte_end":7652310,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652311,"byte_end":7652388,"line_start":350,"line_end":350,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652389,"byte_end":7652460,"line_start":351,"line_end":351,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652461,"byte_end":7652534,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652535,"byte_end":7652605,"line_start":353,"line_end":353,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652606,"byte_end":7652609,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652610,"byte_end":7652664,"line_start":355,"line_end":355,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652665,"byte_end":7652752,"line_start":356,"line_end":356,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7652753,"byte_end":7652764,"line_start":357,"line_end":357,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7654030,"byte_end":7654039,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653518,"byte_end":7653594,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653595,"byte_end":7653605,"line_start":384,"line_end":384,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653606,"byte_end":7653609,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653610,"byte_end":7653690,"line_start":386,"line_end":386,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653691,"byte_end":7653770,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653771,"byte_end":7653784,"line_start":388,"line_end":388,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653785,"byte_end":7653788,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653789,"byte_end":7653868,"line_start":390,"line_end":390,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653869,"byte_end":7653945,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7653946,"byte_end":7654022,"line_start":392,"line_end":392,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664627,"byte_end":7664635,"line_start":697,"line_end":697,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664514,"byte_end":7664584,"line_start":695,"line_end":695,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664589,"byte_end":7664615,"line_start":696,"line_end":696,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665114,"byte_end":7665124,"line_start":710,"line_end":710,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664898,"byte_end":7664932,"line_start":705,"line_end":705,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664937,"byte_end":7664940,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664945,"byte_end":7664990,"line_start":707,"line_end":707,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664995,"byte_end":7665066,"line_start":708,"line_end":708,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665071,"byte_end":7665102,"line_start":709,"line_end":709,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665739,"byte_end":7665749,"line_start":726,"line_end":726,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665228,"byte_end":7665302,"line_start":714,"line_end":714,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665307,"byte_end":7665345,"line_start":715,"line_end":715,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665350,"byte_end":7665353,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665358,"byte_end":7665376,"line_start":717,"line_end":717,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665381,"byte_end":7665384,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665389,"byte_end":7665413,"line_start":719,"line_end":719,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665418,"byte_end":7665421,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665426,"byte_end":7665485,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665490,"byte_end":7665539,"line_start":722,"line_end":722,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665544,"byte_end":7665620,"line_start":723,"line_end":723,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665625,"byte_end":7665653,"line_start":724,"line_end":724,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665658,"byte_end":7665727,"line_start":725,"line_end":725,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666030,"byte_end":7666039,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7665949,"byte_end":7666018,"line_start":731,"line_end":731,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666229,"byte_end":7666242,"line_start":737,"line_end":737,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666143,"byte_end":7666217,"line_start":736,"line_end":736,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666458,"byte_end":7666468,"line_start":744,"line_end":744,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666355,"byte_end":7666446,"line_start":743,"line_end":743,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666586,"byte_end":7666599,"line_start":749,"line_end":749,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666516,"byte_end":7666574,"line_start":748,"line_end":748,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666847,"byte_end":7666862,"line_start":757,"line_end":757,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7666782,"byte_end":7666835,"line_start":756,"line_end":756,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667130,"byte_end":7667143,"line_start":765,"line_end":765,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667070,"byte_end":7667118,"line_start":764,"line_end":764,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667441,"byte_end":7667451,"line_start":778,"line_end":778,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667374,"byte_end":7667429,"line_start":777,"line_end":777,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667728,"byte_end":7667737,"line_start":784,"line_end":784,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667647,"byte_end":7667716,"line_start":783,"line_end":783,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667929,"byte_end":7667942,"line_start":789,"line_end":789,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667843,"byte_end":7667917,"line_start":788,"line_end":788,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668150,"byte_end":7668160,"line_start":796,"line_end":796,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668047,"byte_end":7668138,"line_start":795,"line_end":795,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668815,"byte_end":7668825,"line_start":816,"line_end":816,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668620,"byte_end":7668654,"line_start":812,"line_end":812,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668659,"byte_end":7668662,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668667,"byte_end":7668740,"line_start":814,"line_end":814,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668745,"byte_end":7668803,"line_start":815,"line_end":815,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669177,"byte_end":7669191,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668931,"byte_end":7668970,"line_start":820,"line_end":820,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668975,"byte_end":7668978,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7668983,"byte_end":7669058,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669063,"byte_end":7669139,"line_start":823,"line_end":823,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669144,"byte_end":7669165,"line_start":824,"line_end":824,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669350,"byte_end":7669363,"line_start":830,"line_end":830,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669280,"byte_end":7669338,"line_start":829,"line_end":829,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669611,"byte_end":7669626,"line_start":838,"line_end":838,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669546,"byte_end":7669599,"line_start":837,"line_end":837,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669903,"byte_end":7669916,"line_start":846,"line_end":846,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7669843,"byte_end":7669891,"line_start":845,"line_end":845,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673499,"byte_end":7673504,"line_start":962,"line_end":962,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673262,"byte_end":7673326,"line_start":958,"line_end":958,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673331,"byte_end":7673334,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673339,"byte_end":7673414,"line_start":960,"line_end":960,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673419,"byte_end":7673487,"line_start":961,"line_end":961,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674427,"byte_end":7674435,"line_start":984,"line_end":984,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673899,"byte_end":7673974,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673979,"byte_end":7673982,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673987,"byte_end":7674059,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674064,"byte_end":7674138,"line_start":977,"line_end":977,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674143,"byte_end":7674163,"line_start":978,"line_end":978,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674168,"byte_end":7674171,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674176,"byte_end":7674202,"line_start":980,"line_end":980,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674207,"byte_end":7674250,"line_start":981,"line_end":981,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674255,"byte_end":7674328,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7674333,"byte_end":7674415,"line_start":983,"line_end":983,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679304,"byte_end":7679309,"line_start":1116,"line_end":1116,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679067,"byte_end":7679131,"line_start":1112,"line_end":1112,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679136,"byte_end":7679139,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679144,"byte_end":7679219,"line_start":1114,"line_end":1114,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679224,"byte_end":7679292,"line_start":1115,"line_end":1115,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679951,"byte_end":7679959,"line_start":1132,"line_end":1132,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679423,"byte_end":7679498,"line_start":1122,"line_end":1122,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679503,"byte_end":7679506,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679511,"byte_end":7679583,"line_start":1124,"line_end":1124,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679588,"byte_end":7679662,"line_start":1125,"line_end":1125,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679667,"byte_end":7679687,"line_start":1126,"line_end":1126,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679692,"byte_end":7679695,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679700,"byte_end":7679726,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679731,"byte_end":7679774,"line_start":1129,"line_end":1129,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679779,"byte_end":7679852,"line_start":1130,"line_end":1130,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679857,"byte_end":7679939,"line_start":1131,"line_end":1131,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":359},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":424},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":437},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1049,"byte_end":1083,"line_start":23,"line_end":23,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1284,"byte_end":1309,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7694553,"byte_end":7694623,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7694624,"byte_end":7694627,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7694628,"byte_end":7694683,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695160,"byte_end":7695168,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":397}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7694942,"byte_end":7695018,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695019,"byte_end":7695022,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695023,"byte_end":7695080,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695081,"byte_end":7695148,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695336,"byte_end":7695342,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":400}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695203,"byte_end":7695262,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695263,"byte_end":7695266,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695267,"byte_end":7695324,"line_start":25,"line_end":25,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698429,"byte_end":7698436,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697230,"byte_end":7697318,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697319,"byte_end":7697322,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697323,"byte_end":7697398,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697399,"byte_end":7697402,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697403,"byte_end":7697483,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697484,"byte_end":7697562,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697563,"byte_end":7697640,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697641,"byte_end":7697719,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697720,"byte_end":7697768,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697769,"byte_end":7697772,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697773,"byte_end":7697833,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697834,"byte_end":7697837,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697838,"byte_end":7697852,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697853,"byte_end":7697856,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697857,"byte_end":7697864,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697865,"byte_end":7697899,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697900,"byte_end":7697938,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697939,"byte_end":7697942,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697943,"byte_end":7697998,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7697999,"byte_end":7698002,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698003,"byte_end":7698025,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698026,"byte_end":7698070,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698071,"byte_end":7698122,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698123,"byte_end":7698171,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698172,"byte_end":7698204,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698205,"byte_end":7698212,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698213,"byte_end":7698216,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698217,"byte_end":7698263,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698264,"byte_end":7698267,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698268,"byte_end":7698307,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698308,"byte_end":7698353,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698354,"byte_end":7698405,"line_start":101,"line_end":101,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698406,"byte_end":7698413,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698414,"byte_end":7698421,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707730,"byte_end":7707734,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707237,"byte_end":7707289,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707294,"byte_end":7707297,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707302,"byte_end":7707374,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707379,"byte_end":7707451,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707456,"byte_end":7707488,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707493,"byte_end":7707496,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707501,"byte_end":7707573,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707578,"byte_end":7707648,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707653,"byte_end":7707718,"line_start":340,"line_end":340,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708386,"byte_end":7708399,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707804,"byte_end":7707865,"line_start":345,"line_end":345,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707870,"byte_end":7707914,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707919,"byte_end":7707922,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707927,"byte_end":7707946,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707951,"byte_end":7707954,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707959,"byte_end":7708029,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708034,"byte_end":7708108,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708113,"byte_end":7708116,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708121,"byte_end":7708189,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708194,"byte_end":7708267,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708272,"byte_end":7708344,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708349,"byte_end":7708374,"line_start":356,"line_end":356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708763,"byte_end":7708775,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708495,"byte_end":7708564,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708569,"byte_end":7708613,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708618,"byte_end":7708621,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708626,"byte_end":7708697,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708702,"byte_end":7708751,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709199,"byte_end":7709210,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708860,"byte_end":7708925,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708930,"byte_end":7708951,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708956,"byte_end":7708959,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7708964,"byte_end":7709039,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709044,"byte_end":7709115,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709120,"byte_end":7709187,"line_start":375,"line_end":375,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709434,"byte_end":7709449,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709272,"byte_end":7709365,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709370,"byte_end":7709422,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":601},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710111,"byte_end":7710123,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":604}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709843,"byte_end":7709918,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709919,"byte_end":7709922,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709923,"byte_end":7710014,"line_start":401,"line_end":401,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710015,"byte_end":7710082,"line_start":402,"line_end":402,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":609},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710513,"byte_end":7710521,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710350,"byte_end":7710421,"line_start":416,"line_end":416,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710422,"byte_end":7710456,"line_start":417,"line_end":417,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711129,"byte_end":7711134,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710757,"byte_end":7710830,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710835,"byte_end":7710850,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710855,"byte_end":7710858,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710863,"byte_end":7710930,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710935,"byte_end":7710997,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711002,"byte_end":7711075,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711080,"byte_end":7711117,"line_start":437,"line_end":437,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711565,"byte_end":7711573,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711189,"byte_end":7711256,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711261,"byte_end":7711264,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711269,"byte_end":7711336,"line_start":444,"line_end":444,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711341,"byte_end":7711344,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711349,"byte_end":7711422,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711427,"byte_end":7711493,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711498,"byte_end":7711501,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711506,"byte_end":7711553,"line_start":449,"line_end":449,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7638851,"byte_end":7638855,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7638892,"byte_end":7638896,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7638912,"byte_end":7638916,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7639721,"byte_end":7639728,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7639981,"byte_end":7639988,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7640351,"byte_end":7640358,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7688798,"byte_end":7688803,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7688840,"byte_end":7688845,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7688861,"byte_end":7688865,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7689025,"byte_end":7689030,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7691938,"byte_end":7691943,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/sink_impl.rs","byte_start":7692405,"byte_end":7692411,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/sink_impl.rs","byte_start":7693265,"byte_end":7693280,"line_start":33,"line_end":33,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7645896,"byte_end":7645916,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7645941,"byte_end":7645959,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646430,"byte_end":7646445,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646969,"byte_end":7646986,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647529,"byte_end":7647538,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647818,"byte_end":7647827,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647837,"byte_end":7647846,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648334,"byte_end":7648346,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648527,"byte_end":7648539,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648841,"byte_end":7648853,"line_start":226,"line_end":226,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648869,"byte_end":7648881,"line_start":228,"line_end":228,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649481,"byte_end":7649493,"line_start":250,"line_end":250,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649637,"byte_end":7649649,"line_start":256,"line_end":256,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649798,"byte_end":7649810,"line_start":262,"line_end":262,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7651906,"byte_end":7651916,"line_start":333,"line_end":333,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7654512,"byte_end":7654532,"line_start":414,"line_end":414,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7657367,"byte_end":7657385,"line_start":498,"line_end":498,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664498,"byte_end":7664504,"line_start":694,"line_end":694,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667349,"byte_end":7667364,"line_start":776,"line_end":776,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7670132,"byte_end":7670138,"line_start":857,"line_end":857,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7670230,"byte_end":7670245,"line_start":863,"line_end":863,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7670337,"byte_end":7670357,"line_start":869,"line_end":869,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7671413,"byte_end":7671431,"line_start":897,"line_end":897,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7672682,"byte_end":7672702,"line_start":929,"line_end":929,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7672947,"byte_end":7672965,"line_start":940,"line_end":940,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673244,"byte_end":7673252,"line_start":957,"line_end":957,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7676877,"byte_end":7676885,"line_start":1049,"line_end":1049,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7676917,"byte_end":7676925,"line_start":1051,"line_end":1051,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7677026,"byte_end":7677034,"line_start":1057,"line_end":1057,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7677886,"byte_end":7677894,"line_start":1081,"line_end":1081,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679040,"byte_end":7679057,"line_start":1111,"line_end":1111,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7681886,"byte_end":7681903,"line_start":1183,"line_end":1183,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7682004,"byte_end":7682021,"line_start":1189,"line_end":1189,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7682873,"byte_end":7682890,"line_start":1213,"line_end":1213,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684076,"byte_end":7684090,"line_start":1249,"line_end":1249,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684373,"byte_end":7684385,"line_start":1261,"line_end":1261,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684911,"byte_end":7684925,"line_start":1279,"line_end":1279,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684962,"byte_end":7684976,"line_start":1280,"line_end":1280,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7685014,"byte_end":7685026,"line_start":1282,"line_end":1282,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7685063,"byte_end":7685075,"line_start":1283,"line_end":1283,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7685088,"byte_end":7685093,"line_start":1285,"line_end":1285,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695450,"byte_end":7695458,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695483,"byte_end":7695489,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698635,"byte_end":7698640,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707221,"byte_end":7707227,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709567,"byte_end":7709573,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709677,"byte_end":7709683,"line_start":393,"line_end":393,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710185,"byte_end":7710197,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710546,"byte_end":7710554,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710718,"byte_end":7710726,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710739,"byte_end":7710747,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711676,"byte_end":7711684,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711878,"byte_end":7711886,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7712227,"byte_end":7712235,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7712339,"byte_end":7712347,"line_start":484,"line_end":484,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1274,"byte_end":1278,"line_start":35,"line_end":35,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lib.rs","byte_start":1322,"byte_end":1329,"line_start":37,"line_end":37,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":359}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7638851,"byte_end":7638855,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2849}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7638892,"byte_end":7638896,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2861}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7638912,"byte_end":7638916,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7639721,"byte_end":7639728,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7639981,"byte_end":7639988,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3073}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/lock.rs","byte_start":7640351,"byte_end":7640358,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7688798,"byte_end":7688803,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":2849}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7688840,"byte_end":7688845,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":2861}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7688861,"byte_end":7688865,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7689025,"byte_end":7689030,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/queue.rs","byte_start":7691938,"byte_end":7691943,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/sink_impl.rs","byte_start":7692405,"byte_end":7692411,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":496},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/sink_impl.rs","byte_start":7693265,"byte_end":7693280,"line_start":33,"line_end":33,"column_start":21,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":503},"to":{"krate":18,"index":17}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7645896,"byte_end":7645916,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":482},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7645941,"byte_end":7645959,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646386,"byte_end":7646390,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2849},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646393,"byte_end":7646397,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2861},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646400,"byte_end":7646405,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2470},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646430,"byte_end":7646445,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7646969,"byte_end":7646986,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647529,"byte_end":7647538,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":8905}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647818,"byte_end":7647827,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":522},"to":{"krate":1,"index":2328}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7647837,"byte_end":7647846,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648334,"byte_end":7648346,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648527,"byte_end":7648539,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":8905}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648841,"byte_end":7648853,"line_start":226,"line_end":226,"column_start":47,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":535},"to":{"krate":1,"index":2328}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7648869,"byte_end":7648881,"line_start":228,"line_end":228,"column_start":9,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649481,"byte_end":7649493,"line_start":250,"line_end":250,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649637,"byte_end":7649649,"line_start":256,"line_end":256,"column_start":23,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":8905}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7649798,"byte_end":7649810,"line_start":262,"line_end":262,"column_start":28,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":189},"to":{"krate":1,"index":2328}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7651906,"byte_end":7651916,"line_start":333,"line_end":333,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7654512,"byte_end":7654532,"line_start":414,"line_end":414,"column_start":9,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7657367,"byte_end":7657385,"line_start":498,"line_end":498,"column_start":9,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7664498,"byte_end":7664504,"line_start":694,"line_end":694,"column_start":9,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7667349,"byte_end":7667364,"line_start":776,"line_end":776,"column_start":9,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7670132,"byte_end":7670138,"line_start":857,"line_end":857,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7670230,"byte_end":7670245,"line_start":863,"line_end":863,"column_start":19,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7670337,"byte_end":7670357,"line_start":869,"line_end":869,"column_start":19,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":482},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7671413,"byte_end":7671431,"line_start":897,"line_end":897,"column_start":19,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":2470}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7672682,"byte_end":7672702,"line_start":929,"line_end":929,"column_start":18,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":482},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7672947,"byte_end":7672965,"line_start":940,"line_end":940,"column_start":18,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7673244,"byte_end":7673252,"line_start":957,"line_end":957,"column_start":9,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7676877,"byte_end":7676885,"line_start":1049,"line_end":1049,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7676917,"byte_end":7676925,"line_start":1051,"line_end":1051,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":510},"to":{"krate":17,"index":110}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7677026,"byte_end":7677034,"line_start":1057,"line_end":1057,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7677886,"byte_end":7677894,"line_start":1081,"line_end":1081,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7679040,"byte_end":7679057,"line_start":1111,"line_end":1111,"column_start":9,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7681886,"byte_end":7681903,"line_start":1183,"line_end":1183,"column_start":25,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":516},"to":{"krate":17,"index":110}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7682004,"byte_end":7682021,"line_start":1189,"line_end":1189,"column_start":20,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":516},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7682873,"byte_end":7682890,"line_start":1213,"line_end":1213,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684076,"byte_end":7684090,"line_start":1249,"line_end":1249,"column_start":9,"column_end":23},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684373,"byte_end":7684385,"line_start":1261,"line_end":1261,"column_start":9,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684911,"byte_end":7684925,"line_start":1279,"line_end":1279,"column_start":31,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":2849}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7684962,"byte_end":7684976,"line_start":1280,"line_end":1280,"column_start":31,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":2861}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7685014,"byte_end":7685026,"line_start":1282,"line_end":1282,"column_start":31,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":2849}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7685063,"byte_end":7685075,"line_start":1283,"line_end":1283,"column_start":31,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":2861}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/mpsc/mod.rs","byte_start":7685088,"byte_end":7685093,"line_start":1285,"line_end":1285,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695450,"byte_end":7695458,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7695483,"byte_end":7695489,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7698635,"byte_end":7698640,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7707221,"byte_end":7707227,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709567,"byte_end":7709573,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7709677,"byte_end":7709683,"line_start":393,"line_end":393,"column_start":36,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710185,"byte_end":7710197,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":12120}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710546,"byte_end":7710554,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":8905}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710718,"byte_end":7710726,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":609},"to":{"krate":1,"index":2328}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7710739,"byte_end":7710747,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711676,"byte_end":7711684,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":12120}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7711878,"byte_end":7711886,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":395},"to":{"krate":17,"index":27}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7712227,"byte_end":7712235,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":3084}},{"span":{"file_name":"/Users/lorenzotanganelli/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.15/src/oneshot.rs","byte_start":7712339,"byte_end":7712347,"line_start":484,"line_end":484,"column_start":36,"column_end":44},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":8898}}]}